                Yo dans ce file je mettrai tout ce que je ferai
1-) La creation des tables:
        User
        Professor
        Student
        SchoolManager
    bref comme mon role etait de gerer les authentifications et tout bah je me charge
        de ca
2-) La mise en place des clés etrangères
    Chaque table qui est associée a une personne qui doit se connecter plus tard
        a l'application a la table User comme clé etrangere. et c'est dans cette table
        que les informations personnelles de l'interessé sont saisies.
        Pour les tables secondaires Professor et autres ils contiennent les informations
        secondaires de l'interessé.
        Ainsi lors de l'affichage et autres on usera des jointures pour tout afficher.
        cela me permet d'eviter la repetition des données et tout et ca c'est super cool
3-) La mise en place des Systemes d'authentification:
    >le SessionAuthentication:
        Celui-ci est géré par defaut par django du coup j'ai pas trop eu besoin de le mettre
    >le TokenAuthentication:
        Celui-ci je l'ai géré en allant dans les parametres du projet et en installant le
        rest_framework.authtoken et apres après dans le url j'ai usé la vu obtain_token pour
        faire en sorte que l'interessé ai un token lors de son authentification. mais bon c'est
        pas trop class askip du coup on pass 
    >le JWT(Json Web token):
        Encore plus class que le precedent, celui-ci crée des tokens avec des durées de vie. bref
        il est subdivisé en trois:
            le access token qui nous permet d'avoir acces avec une durée limité
            le refresh token qui permet de faire renaitre un token apres sa mort
            le verify qui est une vue qui verify l'authenticité du token
        Hum bon pour le mettre en place j'ai du:
            installer le simple_jwt avec pip
            et je suis aussi allé le planter dans les parametres comme install apps
            je l'ai aussi mis comme moyen d'authentification avec le REST_FRAMEWORK{
                'DEFAULT_AUTHENTICATION_CLASSES':[
                    'bref je l'ai planté là
                ]
            }
        Puis dans l'appli user j'ai géré le bail en creant des urls pour eux 
        mais bon les vus sont deja faites hein je ne faisait qu'appeler les class
4-) Le CRUD sur la table user:
    Maintenant essayons de gérer le CRUD sur cette table. ca va chauffer mais bon on
    y arriver
    >Creation du UserSeralizer:
        Ce machin a ete  fait et Maintenant à chaque fois que l'on crée un Utilisateur, un mot de pass
        aleatoire lui est attribué. ca sera à lui de modifier ce mot de pass lors de la prochaine conexion
        >Essayons maintenant de voir si c'est possible d'envoyer par mail le password qui lui a ete genere 
            aleatoirement. Hum je sens que cette partie va grave chaffer wallah
            mais bon allons-y apres je viendrai mettre ici comment je m'y suis pris
        >Ouf la ca va maintenant lorsque je crée un prof un user est créé et est relié au prof. et un mail
            lui est envoyé. là ca va je go essayer de faire pareil pour le tuteur et le schoolManager 
            à toute....
                Yo je viens d'y parvenir. C'etait chaud mais j'y susi arrivé. J'ai aussi géré la suppressin
            quand on supprime un professeur ou un eleve ou tuteur ou encore un manager, cela suprime automatiquement
            le user associé et c'est cool. J'ai usé le signals de django hein. Pas trop chaud. Mais bon je vais peut-etre 
            en profiter pour faire les logs avec ca hein. 
            >   Hum je suis aussi parvenu à faire le crd des 3 tables. Pour le update je crois que je vais un peu reflechir
            la dessus. faire en sorte que ca soit un partial update(patch) ou un put(total update) bref j'y reflechi
            là j'ai plus trop d'inspi. Mais c'est Ouf. J'ai fait des trucs de Ouf c'est super dingue wesh j'avais l'extase aujoud'hui
            Maintenant je sais pas trop quoi faire. les mise à jours ou la gestion des Permissions. Ouf flemmme

        
4-) La Gestion des Permissions:
    Hum c'est là qui sera un peu chaud mais bon je vais peut-être y arriver hein
        bon j'arrive et quand j'y arrive je viendra noter commment je m'y suis pris